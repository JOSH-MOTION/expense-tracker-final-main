{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshhd/Downloads/expense-tracker-main/frontend/src/Components/Chart/Chart.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Chart as ChartJs, DoughnutController, ArcElement, Title, Tooltip, CategoryScale, LinearScale } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport styled from 'styled-components';\nimport { useGlobalContext } from '../../context/globalContext';\nimport { dateFormat } from '../../utils/dateFormat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJs.register(DoughnutController, ArcElement, Title, Tooltip, CategoryScale, LinearScale);\nfunction Chart() {\n  _s();\n  const {\n    incomes,\n    expenses\n  } = useGlobalContext();\n  const incomeColor = 'green';\n  // Assign unique colors to each expense based on its index\n  const expenseCategoryColors = {\n    Laptop: 'green',\n    Bag: 'red',\n    Phone: 'blue',\n    Furniture: 'purple',\n    Clothing: 'orange'\n    // Add more categories and colors as needed\n  };\n\n  const data = {\n    labels: ['Income', 'Expenses'],\n    datasets: [{\n      data: [incomes.reduce((total, income) => total + income.amount, 0), expenses.reduce((total, expense) => total + expense.amount, 0)],\n      backgroundColor: [incomeColor, expenseCategoryColors]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ChartStyled, {\n    children: /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(Chart, \"FD0wmpS8gvIkX+imi80kDHo7xkc=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Chart;\nconst ChartStyled = styled.div`\n    background: #FCF6F9;\n    border: 2px solid #FFFFFF;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    padding: 1rem;\n    border-radius: 20px;\n    height: 100%;\n`;\n_c2 = ChartStyled;\nexport default Chart;\n\n// Implement a function to generate random colors\nfunction getRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"Chart\");\n$RefreshReg$(_c2, \"ChartStyled\");","map":{"version":3,"names":["React","Chart","ChartJs","DoughnutController","ArcElement","Title","Tooltip","CategoryScale","LinearScale","Doughnut","styled","useGlobalContext","dateFormat","register","incomes","expenses","incomeColor","expenseCategoryColors","Laptop","Bag","Phone","Furniture","Clothing","data","labels","datasets","reduce","total","income","amount","expense","backgroundColor","ChartStyled","div","getRandomColor","letters","color","i","Math","floor","random"],"sources":["/Users/macintoshhd/Downloads/expense-tracker-main/frontend/src/Components/Chart/Chart.js"],"sourcesContent":["import React from 'react'\nimport {Chart as ChartJs, \n    DoughnutController,\n    ArcElement,\n    Title,\n    Tooltip,\n    CategoryScale,\n    LinearScale,\n  } from 'chart.js';\n\nimport {Doughnut} from 'react-chartjs-2'\nimport styled from 'styled-components'\nimport { useGlobalContext } from '../../context/globalContext'\nimport { dateFormat } from '../../utils/dateFormat'\n\n\nChartJs.register(\n    DoughnutController,\n    ArcElement,\n    Title,\n    Tooltip,\n    CategoryScale,\n    LinearScale,\n  );\n\nfunction Chart() {\n    const {incomes, expenses} = useGlobalContext()\n\n    const incomeColor = 'green';\n    // Assign unique colors to each expense based on its index\n    const expenseCategoryColors = {\n        Laptop: 'green',\n        Bag: 'red',\n        Phone: 'blue',\n        Furniture: 'purple',\n        Clothing: 'orange',\n        // Add more categories and colors as needed\n      };\n\n    const data = {\n        labels: ['Income', 'Expenses'],\n        datasets: [\n          {\n            data: [\n              incomes.reduce((total, income) => total + income.amount, 0),\n              expenses.reduce((total, expense) => total + expense.amount, 0),\n            ],\n            backgroundColor: [incomeColor, expenseCategoryColors],\n          },\n        ],\n      };\n\n      return (\n        <ChartStyled>\n          <Doughnut data={data} />\n        </ChartStyled>\n      );\n}\n\nconst ChartStyled = styled.div`\n    background: #FCF6F9;\n    border: 2px solid #FFFFFF;\n    box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n    padding: 1rem;\n    border-radius: 20px;\n    height: 100%;\n`;\n\nexport default Chart\n\n// Implement a function to generate random colors\nfunction getRandomColor() {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,KAAK,IAAIC,OAAO,EACpBC,kBAAkB,EAClBC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,aAAa,EACbC,WAAW,QACN,UAAU;AAEnB,SAAQC,QAAQ,QAAO,iBAAiB;AACxC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,UAAU,QAAQ,wBAAwB;AAAA;AAGnDV,OAAO,CAACW,QAAQ,CACZV,kBAAkB,EAClBC,UAAU,EACVC,KAAK,EACLC,OAAO,EACPC,aAAa,EACbC,WAAW,CACZ;AAEH,SAASP,KAAK,GAAG;EAAA;EACb,MAAM;IAACa,OAAO;IAAEC;EAAQ,CAAC,GAAGJ,gBAAgB,EAAE;EAE9C,MAAMK,WAAW,GAAG,OAAO;EAC3B;EACA,MAAMC,qBAAqB,GAAG;IAC1BC,MAAM,EAAE,OAAO;IACfC,GAAG,EAAE,KAAK;IACVC,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE,QAAQ;IACnBC,QAAQ,EAAE;IACV;EACF,CAAC;;EAEH,MAAMC,IAAI,GAAG;IACTC,MAAM,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC;IAC9BC,QAAQ,EAAE,CACR;MACEF,IAAI,EAAE,CACJT,OAAO,CAACY,MAAM,CAAC,CAACC,KAAK,EAAEC,MAAM,KAAKD,KAAK,GAAGC,MAAM,CAACC,MAAM,EAAE,CAAC,CAAC,EAC3Dd,QAAQ,CAACW,MAAM,CAAC,CAACC,KAAK,EAAEG,OAAO,KAAKH,KAAK,GAAGG,OAAO,CAACD,MAAM,EAAE,CAAC,CAAC,CAC/D;MACDE,eAAe,EAAE,CAACf,WAAW,EAAEC,qBAAqB;IACtD,CAAC;EAEL,CAAC;EAED,oBACE,QAAC,WAAW;IAAA,uBACV,QAAC,QAAQ;MAAC,IAAI,EAAEM;IAAK;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACZ;AAEtB;AAAC,GAhCQtB,KAAK;EAAA,QACkBU,gBAAgB;AAAA;AAAA,KADvCV,KAAK;AAkCd,MAAM+B,WAAW,GAAGtB,MAAM,CAACuB,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAPID,WAAW;AASjB,eAAe/B,KAAK;;AAEpB;AACA,SAASiC,cAAc,GAAG;EACtB,MAAMC,OAAO,GAAG,kBAAkB;EAClC,IAAIC,KAAK,GAAG,GAAG;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1BD,KAAK,IAAID,OAAO,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;EAClD;EACA,OAAOJ,KAAK;AACd;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}