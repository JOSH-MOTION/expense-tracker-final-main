{"ast":null,"code":"var _s = $RefreshSig$();\n// client/src/hooks/useLogout.js\n\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext'; // Replace with your authentication context\nimport axios from 'axios';\nconst serverUrl = 'http://localhost:5000/api/clear-data'; // Replace with your server's URL\n\nexport const useLogout = () => {\n  _s();\n  const {\n    dispatch\n  } = useContext(AuthContext); // Replace AuthContext with your actual context\n\n  const logout = async () => {\n    try {\n      // Clear user-related data from local storage\n      localStorage.removeItem('user'); // Replace 'user' with your storage key\n\n      // Clear user data on the server-side\n      await clearServerData();\n\n      // Dispatch a logout action to reset the authentication state\n      dispatch({\n        type: 'LOGOUT'\n      }); // Replace with your actual logout action\n\n      // Redirect or perform additional cleanup as needed\n    } catch (error) {\n      console.error('Error clearing user data:', error);\n    }\n  };\n  const clearServerData = async () => {\n    try {\n      const response = await axios.delete(serverUrl);\n\n      // Handle the response from the server (e.g., show a success message)\n      console.log(response.data.message);\n    } catch (error) {\n      // Handle errors (e.g., display an error message)\n      console.error('Error clearing data:', error);\n    }\n  };\n  return {\n    logout\n  };\n};\n_s(useLogout, \"y0TpHjmA0G5gpKtNPtwKueTIMNE=\");","map":{"version":3,"names":["useContext","AuthContext","axios","serverUrl","useLogout","dispatch","logout","localStorage","removeItem","clearServerData","type","error","console","response","delete","log","data","message"],"sources":["/Users/macintoshhd/Downloads/expense-tracker-main/frontend/src/hooks/useLogout.js"],"sourcesContent":["// client/src/hooks/useLogout.js\n\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext'; // Replace with your authentication context\nimport axios from 'axios';\n\nconst serverUrl = 'http://localhost:5000/api/clear-data'; // Replace with your server's URL\n\nexport const useLogout = () => {\n  const { dispatch } = useContext(AuthContext); // Replace AuthContext with your actual context\n\n  const logout = async () => {\n    try {\n      // Clear user-related data from local storage\n      localStorage.removeItem('user'); // Replace 'user' with your storage key\n\n      // Clear user data on the server-side\n      await clearServerData();\n\n      // Dispatch a logout action to reset the authentication state\n      dispatch({ type: 'LOGOUT' }); // Replace with your actual logout action\n\n      // Redirect or perform additional cleanup as needed\n    } catch (error) {\n      console.error('Error clearing user data:', error);\n    }\n  };\n\n  const clearServerData = async () => {\n    try {\n      const response = await axios.delete(serverUrl);\n\n      // Handle the response from the server (e.g., show a success message)\n      console.log(response.data.message);\n    } catch (error) {\n      // Handle errors (e.g., display an error message)\n      console.error('Error clearing data:', error);\n    }\n  };\n\n  return { logout };\n};\n"],"mappings":";AAAA;;AAEA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,wBAAwB,CAAC,CAAC;AACtD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAG,sCAAsC,CAAC,CAAC;;AAE1D,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;EAC7B,MAAM;IAAEC;EAAS,CAAC,GAAGL,UAAU,CAACC,WAAW,CAAC,CAAC,CAAC;;EAE9C,MAAMK,MAAM,GAAG,YAAY;IACzB,IAAI;MACF;MACAC,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;;MAEjC;MACA,MAAMC,eAAe,EAAE;;MAEvB;MACAJ,QAAQ,CAAC;QAAEK,IAAI,EAAE;MAAS,CAAC,CAAC,CAAC,CAAC;;MAE9B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMF,eAAe,GAAG,YAAY;IAClC,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMX,KAAK,CAACY,MAAM,CAACX,SAAS,CAAC;;MAE9C;MACAS,OAAO,CAACG,GAAG,CAACF,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC;IACpC,CAAC,CAAC,OAAON,KAAK,EAAE;MACd;MACAC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,OAAO;IAAEL;EAAO,CAAC;AACnB,CAAC;AAAC,GAjCWF,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}