{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useAuthContext } from './useAuthContext';\n// import { useWorkoutsContext } from './useWorkoutsContext'\n\nexport const useLogout = () => {\n  _s();\n  const {\n    dispatch\n  } = useAuthContext();\n  // const { dispatch: dispatchWorkouts } = useWorkoutsContext()\n\n  const logout = async () => {\n    try {\n      // Send a logout request to your server\n      const response = await fetch('/api/logout', {\n        method: 'POST',\n        credentials: 'include' // Include credentials (cookies) for session identification\n      });\n\n      if (response.status === 200) {\n        // Successful logout on the server\n        // Clear client-side authentication tokens or cookies if applicable\n        // Clear any client-side cached data associated with the user\n\n        // Dispatch a logout action to clear the user's authentication state\n        dispatch({\n          type: 'LOGOUT'\n        });\n      } else {\n        // Handle logout failure\n        console.error('Logout failed.');\n      }\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n  // const logout = () => {\n  // remove user from storage\n  // localStorage.removeItem('user')\n\n  // dispatch logout action\n  // dispatch({ type: 'LOGOUT' })\n  // dispatchWorkouts({ type: 'SET_WORKOUTS', payload: null })\n\n  return {\n    logout\n  };\n};\n_s(useLogout, \"vXYaeyvU/FmdhGY/5jqAJ/fDbZU=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useAuthContext","useLogout","dispatch","logout","response","fetch","method","credentials","status","type","console","error"],"sources":["/Users/macintoshhd/Downloads/expense-tracker-main/frontend/src/hooks/useLogout.js"],"sourcesContent":["import { useAuthContext } from './useAuthContext'\n// import { useWorkoutsContext } from './useWorkoutsContext'\n\nexport const useLogout = () => {\n  const { dispatch } = useAuthContext()\n  // const { dispatch: dispatchWorkouts } = useWorkoutsContext()\n\n  const logout = async () => {\n    try {\n      // Send a logout request to your server\n      const response = await fetch('/api/logout', {\n        method: 'POST',\n        credentials: 'include', // Include credentials (cookies) for session identification\n      });\n\n      if (response.status === 200) {\n        // Successful logout on the server\n        // Clear client-side authentication tokens or cookies if applicable\n        // Clear any client-side cached data associated with the user\n\n        // Dispatch a logout action to clear the user's authentication state\n        dispatch({ type: 'LOGOUT' });\n      } else {\n        // Handle logout failure\n        console.error('Logout failed.');\n      }\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n  // const logout = () => {\n    // remove user from storage\n    // localStorage.removeItem('user')\n\n    // dispatch logout action\n    // dispatch({ type: 'LOGOUT' })\n    // dispatchWorkouts({ type: 'SET_WORKOUTS', payload: null })\n\n\n  return { logout }\n}"],"mappings":";AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;EAC7B,MAAM;IAAEC;EAAS,CAAC,GAAGF,cAAc,EAAE;EACrC;;EAEA,MAAMG,MAAM,GAAG,YAAY;IACzB,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;QAC1CC,MAAM,EAAE,MAAM;QACdC,WAAW,EAAE,SAAS,CAAE;MAC1B,CAAC,CAAC;;MAEF,IAAIH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;QAC3B;QACA;QACA;;QAEA;QACAN,QAAQ,CAAC;UAAEO,IAAI,EAAE;QAAS,CAAC,CAAC;MAC9B,CAAC,MAAM;QACL;QACAC,OAAO,CAACC,KAAK,CAAC,gBAAgB,CAAC;MACjC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC;EACF,CAAC;EACD;EACE;EACA;;EAEA;EACA;EACA;;EAGF,OAAO;IAAER;EAAO,CAAC;AACnB,CAAC;AAAA,GArCYF,SAAS;EAAA,QACCD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}