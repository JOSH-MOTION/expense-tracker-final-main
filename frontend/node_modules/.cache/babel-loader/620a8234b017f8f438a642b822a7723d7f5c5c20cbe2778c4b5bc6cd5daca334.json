{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshhd/Downloads/expense-tracker-main/frontend/src/pages/ProfilePicture.js\",\n  _s = $RefreshSig$();\n// ProfilePicture.js\n\nimport React, { useState } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport UploadProfilePictureModal from '../UploadProfilePictureModal'; // Import the modal component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePicture = () => {\n  _s();\n  const {\n    user\n  } = useAuthContext();\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n  const handleUploadClick = () => {\n    setIsUploadModalOpen(true);\n  };\n  const handleUploadComplete = async newImageFile => {\n    try {\n      const formData = new FormData();\n      formData.append('image', newImageFile);\n      const response = await axios.post('http://localhost:5000/api/upload-image', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Assuming your server responds with the uploaded image URL\n      const newImageUrl = response.data.imageUrl;\n\n      // Handle updating the user's profile picture with the newImageUrl\n      // This logic will depend on how you handle user data and images\n\n      console.log('Image uploaded successfully:', newImageUrl);\n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-picture\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: user.profilePicture,\n      alt: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUploadClick,\n      children: \"Change Picture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UploadProfilePictureModal, {\n      isOpen: isUploadModalOpen,\n      onClose: () => setIsUploadModalOpen(false),\n      onUpload: handleUploadComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePicture, \"FddekwUC636sPxv4P2eaJ4U99DI=\", false, function () {\n  return [useAuthContext];\n});\n_c = ProfilePicture;\nexport default ProfilePicture;\nvar _c;\n$RefreshReg$(_c, \"ProfilePicture\");","map":{"version":3,"names":["React","useState","useAuthContext","UploadProfilePictureModal","ProfilePicture","user","isUploadModalOpen","setIsUploadModalOpen","handleUploadClick","handleUploadComplete","newImageFile","formData","FormData","append","response","axios","post","headers","newImageUrl","data","imageUrl","console","log","error","profilePicture"],"sources":["/Users/macintoshhd/Downloads/expense-tracker-main/frontend/src/pages/ProfilePicture.js"],"sourcesContent":["// ProfilePicture.js\n\nimport React, { useState } from 'react';\nimport { useAuthContext } from '../hooks/useAuthContext';\nimport UploadProfilePictureModal from '../UploadProfilePictureModal'; // Import the modal component\n\nconst ProfilePicture = () => {\n  const { user } = useAuthContext();\n  const [isUploadModalOpen, setIsUploadModalOpen] = useState(false);\n\n  const handleUploadClick = () => {\n    setIsUploadModalOpen(true);\n  };\n\n  const handleUploadComplete = async (newImageFile) => {\n    try {\n      const formData = new FormData();\n      formData.append('image', newImageFile);\n  \n      const response = await axios.post('http://localhost:5000/api/upload-image', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n  \n      // Assuming your server responds with the uploaded image URL\n      const newImageUrl = response.data.imageUrl;\n  \n      // Handle updating the user's profile picture with the newImageUrl\n      // This logic will depend on how you handle user data and images\n  \n      console.log('Image uploaded successfully:', newImageUrl);\n    } catch (error) {\n      console.error('Error uploading image:', error);\n    }\n  };\n\n  return (\n    <div className=\"profile-picture\">\n      <img src={user.profilePicture} alt=\"Profile\" />\n      <button onClick={handleUploadClick}>Change Picture</button>\n      <UploadProfilePictureModal\n        isOpen={isUploadModalOpen}\n        onClose={() => setIsUploadModalOpen(false)}\n        onUpload={handleUploadComplete}\n      />\n    </div>\n  );\n};\n\nexport default ProfilePicture;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,yBAAyB;AACxD,OAAOC,yBAAyB,MAAM,8BAA8B,CAAC,CAAC;AAAA;AAEtE,MAAMC,cAAc,GAAG,MAAM;EAAA;EAC3B,MAAM;IAAEC;EAAK,CAAC,GAAGH,cAAc,EAAE;EACjC,MAAM,CAACI,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMO,iBAAiB,GAAG,MAAM;IAC9BD,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAME,oBAAoB,GAAG,MAAOC,YAAY,IAAK;IACnD,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,YAAY,CAAC;MAEtC,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,wCAAwC,EAAEL,QAAQ,EAAE;QACpFM,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;;MAEF;MACA,MAAMC,WAAW,GAAGJ,QAAQ,CAACK,IAAI,CAACC,QAAQ;;MAE1C;MACA;;MAEAC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEJ,WAAW,CAAC;IAC1D,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,iBAAiB;IAAA,wBAC9B;MAAK,GAAG,EAAElB,IAAI,CAACmB,cAAe;MAAC,GAAG,EAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,eAC/C;MAAQ,OAAO,EAAEhB,iBAAkB;MAAA,UAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QAAS,eAC3D,QAAC,yBAAyB;MACxB,MAAM,EAAEF,iBAAkB;MAC1B,OAAO,EAAE,MAAMC,oBAAoB,CAAC,KAAK,CAAE;MAC3C,QAAQ,EAAEE;IAAqB;MAAA;MAAA;MAAA;IAAA,QAC/B;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GA1CIL,cAAc;EAAA,QACDF,cAAc;AAAA;AAAA,KAD3BE,cAAc;AA4CpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}