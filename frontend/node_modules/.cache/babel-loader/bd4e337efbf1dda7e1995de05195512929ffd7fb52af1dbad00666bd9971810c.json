{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshhd/Downloads/expense-tracker-main/frontend/src/UploadProfilePictureModal.js\",\n  _s = $RefreshSig$();\n// UploadProfilePictureModal.js\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadProfilePictureModal = _ref => {\n  _s();\n  let {\n    isOpen,\n    onClose,\n    onUpload\n  } = _ref;\n  const [selectedImage, setSelectedImage] = useState(null);\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    setSelectedImage(file);\n  };\n  const handleUpload = () => {\n    try {\n      // Log for debugging\n      console.log('Uploading image...');\n\n      // Implement logic to upload the selectedImage\n      // Call the onUpload function with the new image URL\n      onUpload(selectedImage);\n      onClose();\n    } catch (error) {\n      // Log any errors for debugging\n      console.error('Error uploading image:', error);\n    }\n  };\n\n  // Log for debugging\n  console.log('isOpen:', isOpen);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `modal ${isOpen ? 'open' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upload Profile Picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadProfilePictureModal, \"gNHFCSJ3h3sH8HFrpxN7hUqoxHs=\");\n_c = UploadProfilePictureModal;\nexport default UploadProfilePictureModal;\nvar _c;\n$RefreshReg$(_c, \"UploadProfilePictureModal\");","map":{"version":3,"names":["React","useState","UploadProfilePictureModal","isOpen","onClose","onUpload","selectedImage","setSelectedImage","handleImageChange","e","file","target","files","handleUpload","console","log","error"],"sources":["/Users/macintoshhd/Downloads/expense-tracker-main/frontend/src/UploadProfilePictureModal.js"],"sourcesContent":["// UploadProfilePictureModal.js\n\nimport React, { useState } from 'react';\n\nconst UploadProfilePictureModal = ({ isOpen, onClose, onUpload }) => {\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    setSelectedImage(file);\n  };\n\n  const handleUpload = () => {\n    try {\n      // Log for debugging\n      console.log('Uploading image...');\n      \n      // Implement logic to upload the selectedImage\n      // Call the onUpload function with the new image URL\n      onUpload(selectedImage);\n      onClose();\n    } catch (error) {\n      // Log any errors for debugging\n      console.error('Error uploading image:', error);\n    }\n  };\n\n  // Log for debugging\n  console.log('isOpen:', isOpen);\n\n  return (\n    <div className={`modal ${isOpen ? 'open' : ''}`}>\n      <div className=\"modal-content\">\n        <h3>Upload Profile Picture</h3>\n        <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\n        <button onClick={handleUpload}>Upload</button>\n        <button onClick={onClose}>Cancel</button>\n      </div>\n    </div>\n  );\n};\n\nexport default UploadProfilePictureModal;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,MAAMC,yBAAyB,GAAG,QAAmC;EAAA;EAAA,IAAlC;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAS,CAAC;EAC9D,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMO,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9BL,gBAAgB,CAACG,IAAI,CAAC;EACxB,CAAC;EAED,MAAMG,YAAY,GAAG,MAAM;IACzB,IAAI;MACF;MACAC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;;MAEjC;MACA;MACAV,QAAQ,CAACC,aAAa,CAAC;MACvBF,OAAO,EAAE;IACX,CAAC,CAAC,OAAOY,KAAK,EAAE;MACd;MACAF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;;EAED;EACAF,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEZ,MAAM,CAAC;EAE9B,oBACE;IAAK,SAAS,EAAG,SAAQA,MAAM,GAAG,MAAM,GAAG,EAAG,EAAE;IAAA,uBAC9C;MAAK,SAAS,EAAC,eAAe;MAAA,wBAC5B;QAAA,UAAI;MAAsB;QAAA;QAAA;QAAA;MAAA,QAAK,eAC/B;QAAO,IAAI,EAAC,MAAM;QAAC,MAAM,EAAC,SAAS;QAAC,QAAQ,EAAEK;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAG,eACnE;QAAQ,OAAO,EAAEK,YAAa;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS,eAC9C;QAAQ,OAAO,EAAET,OAAQ;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACrC;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GApCIF,yBAAyB;AAAA,KAAzBA,yBAAyB;AAsC/B,eAAeA,yBAAyB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}