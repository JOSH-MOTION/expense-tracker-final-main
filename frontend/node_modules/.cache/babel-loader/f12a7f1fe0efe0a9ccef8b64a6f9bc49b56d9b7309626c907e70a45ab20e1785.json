{"ast":null,"code":"var _s = $RefreshSig$();\n// useLogout.js\n\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext'; // Replace with your authentication context\nimport { clearServerData } from '../'; // Replace with your server data clearing function\n\nexport const useLogout = () => {\n  _s();\n  const {\n    dispatch\n  } = useContext(AuthContext); // Replace AuthContext with the actual context you're using for authentication\n\n  const logout = async () => {\n    // Clear user-related data (e.g., authentication token) from local storage\n    localStorage.removeItem('user'); // Replace 'token' with your actual storage key\n\n    try {\n      // Clear user data on the server-side (optional but recommended)\n      await clearServerData(); // Implement this function to clear server-side data\n\n      // Dispatch a logout action to reset the authentication state\n      dispatch({\n        type: 'LOGOUT'\n      }); // Replace with your actual logout action\n\n      // Additional cleanup or redirection logic can be added here\n    } catch (error) {\n      console.error('Error clearing server data:', error);\n    }\n  };\n  return {\n    logout\n  };\n};\n_s(useLogout, \"y0TpHjmA0G5gpKtNPtwKueTIMNE=\");","map":{"version":3,"names":["useContext","AuthContext","clearServerData","useLogout","dispatch","logout","localStorage","removeItem","type","error","console"],"sources":["/Users/macintoshhd/Downloads/expense-tracker-main/frontend/src/hooks/useLogout.js"],"sourcesContent":["// useLogout.js\n\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext'; // Replace with your authentication context\nimport { clearServerData } from '../'; // Replace with your server data clearing function\n\nexport const useLogout = () => {\n  const { dispatch } = useContext(AuthContext); // Replace AuthContext with the actual context you're using for authentication\n\n  const logout = async () => {\n    // Clear user-related data (e.g., authentication token) from local storage\n    localStorage.removeItem('user'); // Replace 'token' with your actual storage key\n\n    try {\n      // Clear user data on the server-side (optional but recommended)\n      await clearServerData(); // Implement this function to clear server-side data\n\n      // Dispatch a logout action to reset the authentication state\n      dispatch({ type: 'LOGOUT' }); // Replace with your actual logout action\n\n      // Additional cleanup or redirection logic can be added here\n    } catch (error) {\n      console.error('Error clearing server data:', error);\n    }\n  };\n\n  return { logout };\n};\n"],"mappings":";AAAA;;AAEA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,wBAAwB,CAAC,CAAC;AACtD,SAASC,eAAe,QAAQ,KAAK,CAAC,CAAC;;AAEvC,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;EAC7B,MAAM;IAAEC;EAAS,CAAC,GAAGJ,UAAU,CAACC,WAAW,CAAC,CAAC,CAAC;;EAE9C,MAAMI,MAAM,GAAG,YAAY;IACzB;IACAC,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;;IAEjC,IAAI;MACF;MACA,MAAML,eAAe,EAAE,CAAC,CAAC;;MAEzB;MACAE,QAAQ,CAAC;QAAEI,IAAI,EAAE;MAAS,CAAC,CAAC,CAAC,CAAC;;MAE9B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAED,OAAO;IAAEJ;EAAO,CAAC;AACnB,CAAC;AAAC,GArBWF,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}